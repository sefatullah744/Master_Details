@model WebApplication1.Models.Applicant

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Applicant Info</h2>


@using (Html.BeginForm("Edit", "Applicant", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(m => m.Id)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PicPath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(m => m.PicPath)
                <input type="file" name="Picture" />
                @Html.ValidationMessageFor(model => model.PicPath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsAvailable)
                    @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-success float-end" name="btn" formnovalidate />
            </div>
        </div>
        <div class="form-group">
            <table class="table table-bordered">
                <tr>
                    <td>Company</td>
                    <td>Designation</td>
                    <td>Year of Experience</td>
                </tr>
                @for (int i = 0; i < Model.ApplicantExes.Count; i++)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(m => Model.ApplicantExes[i].AppId)
                            @Html.EditorFor(m => Model.ApplicantExes[i].CompanyName, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(m => Model.ApplicantExes[i].CompanyName)
                        </td>
                        <td>
                            @Html.EditorFor(m => Model.ApplicantExes[i].Designation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.ApplicantExes[i].Designation)
                        </td>
                        <td>
                            @Html.EditorFor(m => Model.ApplicantExes[i].YearOfEx, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(m => Model.ApplicantExes[i].YearOfEx)
                        </td>
                        <td>
                            <input type="submit" value="Remove" onclick="Remove(this)" class="btn btn-danger" />
                        </td>
                    </tr>
                }
            </table>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" name="btn" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function Remove(e) {
            $(e).closest('tr').remove();
        }
    </script>
}
